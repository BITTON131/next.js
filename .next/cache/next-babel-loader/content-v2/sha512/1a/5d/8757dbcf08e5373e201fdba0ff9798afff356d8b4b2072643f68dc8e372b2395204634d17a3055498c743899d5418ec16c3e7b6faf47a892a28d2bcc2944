{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ai que delicia\\\\next.js\\\\src\\\\compoments\\\\Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: Isactive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');\n\n  function StartCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (Isactive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [Isactive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), Isactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.CountdownButtonActive,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.CountdownButton,\n      onClick: StartCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/ai que delicia/next.js/src/compoments/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","Isactive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondsLeft","secondsRight","StartCountdown","resetCountdown","clearTimeout","setTimeout","CountdownContainer","CountdownButtonActive","CountdownButton"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,MAAM,EAAP,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMS,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAE,EAAjB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAApC;;AAEA,WAASG,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAGD,WAASa,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACnB,gBAAD,CAAZ;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACH;;AAGDL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACrBF,MAAAA,gBAAgB,GAAGoB,UAAU,CAAC,MAAM;AAChCjB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAaMZ,QAAQ,gBACN;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAEL,MAAM,CAACuB,qBAFlB;AAGA,MAAA,OAAO,EAAEJ,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBASN;AACJ,MAAA,IAAI,EAAC,QADD;AAEJ,MAAA,SAAS,EAAEnB,MAAM,CAACwB,eAFd;AAGJ,MAAA,OAAO,EAAEN,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n    const [time, setTime] = useState(0.1 * 60);\r\n    const [Isactive, setIsActive] = useState(false);\r\n\r\n    const minutes = Math.floor(time/ 60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2,  '0').split('');\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2,  '0').split('');\r\n\r\n    function StartCountdown() {\r\n        setIsActive(true);\r\n    }\r\n\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.1 * 60);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(Isactive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }\r\n    }, [Isactive, time])\r\n\r\n    return (\r\n        <div>\r\n        <div className={styles.CountdownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n                <span>{secondsLeft}</span>\r\n                <span>{secondsRight}</span>\r\n            </div>\r\n            </div>\r\n\r\n            { Isactive ?(\r\n                <button \r\n                type=\"button\" \r\n                className={styles.CountdownButtonActive}\r\n                onClick={resetCountdown}\r\n                >\r\n                    Abandonar ciclo\r\n                </button>\r\n            ) : (\r\n                <button \r\n            type=\"button\" \r\n            className={styles.CountdownButton}\r\n            onClick={StartCountdown}\r\n            >\r\n                Iniciar um ciclo\r\n            </button>\r\n            ) }\r\n\r\n\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}