{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ai que delicia\\\\next.js\\\\src\\\\compoments\\\\Countdown.tsx\";\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const contextData = useContext(ChallengesContext);\n  console.log(contextData);\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: Isactive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');\n\n  function StartCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (Isactive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (Isactive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [Isactive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.CountdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Isactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.CountdownButtonActive,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.CountdownButton,\n        onClick: StartCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/ai que delicia/next.js/src/compoments/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengesContext","styles","countdownTimeout","Countdown","contextData","console","log","time","setTime","Isactive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondsLeft","secondsRight","StartCountdown","resetCountdown","clearTimeout","setTimeout","CountdownContainer","CountdownButton","CountdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\n\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n    const contextData = useContext(ChallengesContext);\r\n\r\n    console.log(contextData)\r\n\r\n    const [time, setTime] = useState(0.1 * 60);\r\n    const [Isactive, setIsActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n\r\n    const minutes = Math.floor(time/ 60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2,  '0').split('');\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2,  '0').split('');\r\n\r\n    function StartCountdown() {\r\n        setIsActive(true);\r\n    }\r\n\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.1 * 60);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(Isactive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        } else if (Isactive && time == 0) {\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n        }\r\n    }, [Isactive, time])\r\n\r\n    return (\r\n        <div>\r\n        <div className={styles.CountdownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n                <span>{secondsLeft}</span>\r\n                <span>{secondsRight}</span>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            { hasFinished ? (\r\n               <button \r\n               disabled \r\n               className={styles.CountdownButton}\r\n               >\r\n                   Ciclo encerrado\r\n               </button>\r\n             ) : (\r\n                <>\r\n                        { Isactive ?(\r\n                    <button \r\n                    type=\"button\" \r\n                    className={styles.CountdownButtonActive}\r\n                    onClick={resetCountdown}\r\n                    >\r\n                        Abandonar ciclo\r\n                    </button>\r\n                ) : (\r\n                    <button \r\n                type=\"button\" \r\n                className={styles.CountdownButton}\r\n                onClick={StartCountdown}\r\n                >\r\n                    Iniciar um ciclo\r\n                </button>\r\n                ) }\r\n\r\n            </> \r\n             )}\r\n            \r\n\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}