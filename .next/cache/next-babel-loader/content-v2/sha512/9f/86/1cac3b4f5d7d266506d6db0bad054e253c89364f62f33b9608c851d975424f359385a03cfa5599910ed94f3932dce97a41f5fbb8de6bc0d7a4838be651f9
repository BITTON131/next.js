{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ai que delicia\\\\next.js\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../compoments/LevelUpModal';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const {\n    0: isLevelUpModalOpean,\n    1: setIsLevelUpModalOpean\n  } = useState(false);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpean(true);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desaio ♣', {\n        body: `Valendo ${challenge.amount}XP!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      challengesCompleted,\n      currentExperience,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: [children, isLevelUpModalOpean && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/ai que delicia/next.js/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpean","setIsLevelUpModalOpean","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AA+BA,OAAO,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASO,kBAAT,OAG0B;AAAA;;AAAA,MAHE;AAC/BC,IAAAA;AAD+B,GAGF;AAAA,MAD1BC,IAC0B;;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,gBAACQ,IAAI,CAACC,KAAN,qDAAe,CAAf,CAAlC;AACA,QAAM;AAAA,OAACE,iBAAD;AAAA,OAAoBC;AAApB,MAA4CZ,QAAQ,0BAAEQ,IAAI,CAACG,iBAAP,yEAA4B,CAA5B,CAA1D;AACA,QAAM;AAAA,OAACE,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDd,QAAQ,0BAACQ,IAAI,CAACK,mBAAN,yEAA6B,CAA7B,CAA9D;AAEA,QAAM;AAAA,OAACE,eAAD;AAAA,OAAkBC;AAAlB,MAAwChB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAACiB,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDlB,QAAQ,CAAC,KAAD,CAA9D;AAEA,QAAMmB,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACZ,KAAK,GAAE,CAAR,IAAW,CAApB,EAAuB,CAAvB,CAA9B;AAECR,EAAAA,SAAS,CAAC,MAAM;AACbqB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFS,EAEP,EAFO,CAAT;AAIDtB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,OAAO,CAACsB,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAAChB,KAAD,CAA3B;AACAP,IAAAA,OAAO,CAACsB,GAAR,CAAY,mBAAZ,EAAiCC,MAAM,CAACd,iBAAD,CAAvC;AACAT,IAAAA,OAAO,CAACsB,GAAR,CAAY,qBAAZ,EAAmCC,MAAM,CAACZ,mBAAD,CAAzC;AAEH,GALQ,EAKN,CAACJ,KAAD,EAAQE,iBAAR,EAA2BE,mBAA3B,CALM,CAAT;;AAOF,WAASa,OAAT,GAAmB;AACjBhB,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAS,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAED,WAASS,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGR,IAAI,CAACS,KAAL,CAAYT,IAAI,CAACU,MAAL,KAAgB3B,UAAU,CAAC4B,MAAvC,CAA7B;AACA,UAAMC,SAAS,GAAG7B,UAAU,CAACyB,oBAAD,CAA5B;AAEAZ,IAAAA,kBAAkB,CAACgB,SAAD,CAAlB;AAEE,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAGF,QAAIZ,YAAY,CAACa,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIb,YAAJ,CAAiB,eAAjB,EAAkC;AAC9Bc,QAAAA,IAAI,EAAI,WAAUJ,SAAS,CAACK,MAAO;AADL,OAAlC;AAGH;AACJ;;AAED,WAASC,cAAT,GAA0B;AACtBtB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASuB,iBAAT,GAA8B;AAC5B,QAAI,CAACxB,eAAL,EAAsB;AAClB;AACH;;AAGD,UAAM;AAAEsB,MAAAA;AAAF,QAAatB,eAAnB;AAEA,QAAIyB,eAAe,GAAG7B,iBAAiB,GAAG0B,MAA1C;;AAEA,QAAIG,eAAe,IAAIrB,qBAAvB,EAA8C;AAC3CqB,MAAAA,eAAe,GAAGA,eAAe,GAAGrB,qBAApC;AACCO,MAAAA,OAAO;AACV;;AAGDd,IAAAA,oBAAoB,CAAC4B,eAAD,CAApB;AACAxB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAEC,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACNJ,MAAAA,KADM;AAENI,MAAAA,mBAFM;AAGNF,MAAAA,iBAHM;AAINe,MAAAA,OAJM;AAKNC,MAAAA,iBALM;AAMNZ,MAAAA,eANM;AAONuB,MAAAA,cAPM;AAQNnB,MAAAA,qBARM;AASNoB,MAAAA;AATM,KADP;AAAA,eAaKhC,QAbL,EAeMU,mBAAmB,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAf7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../compoments/LevelUpModal';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    challengesCompleted: number;\r\n     currentExperience: number;\r\n     experienceToNextLevel: number;\r\n     activeChallenge: Challenge;\r\n     resetChallenge:() => void;\r\n     levelUp: () => void;\r\n     startNewChallenge:() =>void;\r\n     completeChallenge:() =>void;\r\n     \r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n        level: number;\r\n        currentExperience: number;\r\n        challengesCompleted: number;\r\n     \r\n}\r\n\r\n\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ \r\n    children, \r\n    ...rest\r\n     }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState( rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n    const [isLevelUpModalOpean, setIsLevelUpModalOpean] = useState(false)\r\n\r\n    const experienceToNextLevel = Math.pow((level +1)*4, 2)\r\n\r\n     useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n\r\n    }, [level, currentExperience, challengesCompleted]);\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n    setIsLevelUpModalOpean(true)\r\n  }\r\n\r\n  function startNewChallenge() {\r\n      const randomChallengeIndex = Math.floor (Math.random() * challenges.length)\r\n      const challenge = challenges[randomChallengeIndex];\r\n      \r\n      setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n\r\n      if (Notification.permission === 'granted') {\r\n          new Notification('Novo desaio ♣', {\r\n              body:  `Valendo ${challenge.amount}XP!`\r\n          })\r\n      }\r\n  }\r\n\r\n  function resetChallenge() {\r\n      setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge( ) {\r\n    if (!activeChallenge) {\r\n        return;\r\n    }\r\n\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n       finalExperience = finalExperience - experienceToNextLevel;\r\n        levelUp();\r\n    }\r\n\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n    return (\r\n        <ChallengesContext.Provider \r\n        value={{ \r\n         level, \r\n         challengesCompleted, \r\n         currentExperience, \r\n         levelUp,\r\n         startNewChallenge,\r\n         activeChallenge,\r\n         resetChallenge,\r\n         experienceToNextLevel,\r\n         completeChallenge,\r\n         }}\r\n         >\r\n            {children}\r\n            \r\n            { isLevelUpModalOpean && <LevelUpModal />}\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}